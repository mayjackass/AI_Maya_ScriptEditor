// MEL Hover Tooltip Test
// Test the hover functionality for MEL syntax

// Global procedures - hover over 'global' and 'proc'
global proc testMelHover() {
    print("Testing MEL hover tooltips\n");
    
    // Variable declarations - hover over data types and variables
    string $name = "Maya";        // hover over 'string', '$name'
    int $count = 10;             // hover over 'int', '$count' 
    float $value = 3.14;         // hover over 'float', '$value'
    vector $position = <<0,1,0>>; // hover over 'vector', '$position'
    
    // Arrays
    string $items[] = {"a", "b", "c"}; // hover over array syntax
    int $numbers[] = {1, 2, 3, 4, 5};
    
    // Control structures - hover over keywords
    if ($count > 5) {            // hover over 'if'
        print("Count is greater than 5\n");
    } else {                     // hover over 'else'  
        print("Count is 5 or less\n");
    }
    
    // For loop - hover over 'for'
    for ($i = 0; $i < size($numbers); $i++) {  // hover over 'size'
        print("Number: " + $numbers[$i] + "\n");
    }
    
    // While loop - hover over 'while'
    while ($count > 0) {
        $count--;
        if ($count == 5) {
            break;               // hover over 'break'
        }
    }
    
    // Maya commands - hover over each command
    string $cube[] = `polyCube -name "testCube"`;  // hover over 'polyCube'
    move 0 5 0 $cube[0];         // hover over 'move'
    rotate 45 0 0 $cube[0];      // hover over 'rotate'  
    scale 2 2 2 $cube[0];        // hover over 'scale'
    
    // Selection commands
    select $cube[0];             // hover over 'select'
    string $selected[] = `ls -selection`;  // hover over 'ls'
    
    if (size($selected) > 0) {
        delete $selected;        // hover over 'delete'
    }
    
    // File operations
    string $scriptPath = `workspace -query -rootDirectory` + "scripts/";
    source ($scriptPath + "myScript.mel");  // hover over 'source'
    
    // Array operations
    clear($items);               // hover over 'clear'
    
    return;                      // hover over 'return'
}

// Test procedure with parameters
global proc string getName(string $prefix) {  // hover over parameter syntax
    return $prefix + "_object";
}

// Switch statement - hover over 'switch', 'case', 'default'
global proc testSwitch(int $value) {
    switch ($value) {            // hover over 'switch'
        case 1:                  // hover over 'case'
            print("One\n");
            break;
        case 2:
            print("Two\n");  
            break;
        default:                 // hover over 'default'
            print("Other\n");
            break;
    }
}

// Call the test procedure
testMelHover();